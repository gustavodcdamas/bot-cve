from .base_collector import BaseCollector
from datetime import datetime, timedelta
import feedparser
import requests
import os

class ExploitDBCollector(BaseCollector):
    def __init__(self):
        super().__init__("ExploitDB", rate_limit_delay=1.0)
        self.rss_url = "https://www.exploit-db.com/rss.xml"
    
    def collect_cves(self):
        """Coleta exploits do ExploitDB"""
        try:
            feed = feedparser.parse(self.rss_url)
            cves = []
            
            for entry in feed.entries[:15]:
                # ExploitDB geralmente tem CVE no título
                title = entry.get("title", "")
                if "CVE-" in title:
                    cve_data = {
                        "id": title,
                        "title": title,
                        "description": entry.get("summary", ""),
                        "published": entry.get("published", ""),
                        "cvss": None,
                        "severity": "HIGH",  # Se tem exploit, é sério
                        "references": [entry.get("link", "")],
                        "source": self.name
                    }
                    cves.append(cve_data)
            
            return cves
        except Exception as e:
            print(f"[{self.name}] Erro: {e}")
            return []